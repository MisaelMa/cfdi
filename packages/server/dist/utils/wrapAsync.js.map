{"version":3,"file":"wrapAsync.js","sourceRoot":"","sources":["../../src/utils/wrapAsync.ts"],"names":[],"mappings":";;;AAUO,MAAM,SAAS,GAAG,CAAC,EAAkB,EAAkB,EAAE;IAC9D,OAAO,CAAC,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;QACzD,MAAM,QAAQ,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;QAEpC,OAAO,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC/C,CAAC,CAAC;AACJ,CAAC,CAAC;AANW,QAAA,SAAS,aAMpB","sourcesContent":["import { NextFunction, Request, RequestHandler, Response } from 'express';\n\n/**\n *asasd\n *\n * @param fn\n * @description Wrap asynchronous functions.\n * @param fn\n * @returns RequestHandler\n */\nexport const wrapAsync = (fn: RequestHandler): RequestHandler => {\n  return (req: Request, res: Response, next: NextFunction) => {\n    const fnReturn = fn(req, res, next);\n\n    return Promise.resolve(fnReturn).catch(next);\n  };\n};\n"]}